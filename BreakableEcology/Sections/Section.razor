<section class="section">
    <Container>
        @if (!String.IsNullOrEmpty(Title))
        {
            <SectionTitle Href="@Href" ShowMore=ShowMore>@Title</SectionTitle>
        }

        @if (ManyPages)
        {
            <div class="section__cards section-4">
                @if (items is not null)
                {
                    @foreach (CardModel model in items)
                    {
                        <Card Item="@model" />
                    }
                }
            </div>
            <div class="pagination">
                <button class=@((Skip == 0) ? "hidden pagination__arrow pagination__arrow_left" : "pagination__arrow pagination__arrow_left")
                    type="button" 
                    aria-label="Предыдущая страница" 
                    @onclick="LeftArrowClick">
                </button>
                @for (int i = 0; i < pages; i++)
                {
                    <Bullet @bind-Current=Skip Order="@i"></Bullet>
                }

                <button class=@((Skip == pages - 1) ? "hidden pagination__arrow pagination__arrow_right" : "pagination__arrow pagination__arrow_right")
                    type="button" 
                    aria-label="Следующая страница" 
                    @onclick="RightArrowClick">
                </button>
            </div>
        }
        else
        {
            <div class=@((Is4Section) ? "section__cards section-4" : "section__cards")>
                @if (Items is not null)
                {
                    @foreach (CardModel model in Items)
                    {
                        <Card Item="@model" />
                    }
                }
            </div>
        }
    </Container>
</section>

@code {
    private int pages;
    private int skip = 0;
    private IEnumerable<CardModel> items;

    [Parameter]
    public List<CardModel>? Items { get; set; }
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public bool Is4Section { get; set; }
    [Parameter]
    public string Href { get; set; }
    [Parameter]
    public bool ShowMore { get; set; }
    [Parameter]
    public bool ManyPages { get; set; }
    [Parameter]
    public int Skip
    {
        get => skip;
        set
        {
            skip = value;
            GetItems(Skip);
        }
    }

    protected override void OnInitialized()
    {
        if (ManyPages)
        {
            pages = (Items.Count % 8 == 0) ? Items.Count / 8 : (int)(Items.Count / 8) + 1;
            GetItems(Skip);
        }
    }

    private void GetItems(int skip)
    {
        items = Items.Skip(Skip*8).Take(8).ToList();
    }

    private void LeftArrowClick(){
        if (Skip > 0)
        {
            Skip--;
        }
    }

    private void RightArrowClick()
    {
        if (Skip < pages - 1)
        {
            Skip++;
        }
    }
}
